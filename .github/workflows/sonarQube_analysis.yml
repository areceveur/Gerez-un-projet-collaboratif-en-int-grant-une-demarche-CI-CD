name: sonarqube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000/api/system/health || exit 1"
          --health-interval=60s
          --health-timeout=10s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_REPO }}
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u "${{ secrets.DOCKER_REPO }}" --password-stdin


      - name: Wait for SonarQube to start
        run: |
          echo "Waiting for SonarQube to start..."
          sleep 30  # Attendez un certain temps pour que SonarQube d√©marre

      - name: Get SonarQube logs
        run: docker logs $(docker ps -aqf "name=sonarqube")

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze the back-end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
          SONAR_HOST_URL: 'http://localhost:9000'
        run: |
          cd back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=BobApp \
          -Dsonar.projectName='BobApp'

      - name: Clean SonarQube Cache
        run: rm -rf /home/runner/.sonar/_tmp/

      - name: Build and analyze the front-end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: 'http://localhost:9000'
        run: |
          cd front
          npm install
          npx sonar-scanner \
          -Dsonar.projectKey=BobApp \
          -Dsonar.sources=src/app \
          -Dsonar.typescript.lcov.reportPaths=coverage/bobapp/lcov.info \
          -Dsonar.token=${{ secrets.SONAR_TOKEN_FRONT }} \
          -Dsonar.ws.timeout=36000 \
          -Dsonar.plugins.javascript.version=10.15.0.27423 \
          -Dsonar.exclusions=**/*.spec.ts,**/*.test.js,node_modules/**,src/assets/**,src/polyfills.ts,src/index.html,src/environments/*

      - name: Build Docker images
        run: |
          cd back
          docker build -t ${{ secrets.DOCKER_REPO }}/sonarqube-bobapp-back:latest .
            
          cd ../front
          docker build -t ${{ secrets.DOCKER_REPO }}/sonarqube-bobapp-front:latest .

      - name: Login to Docker Hub
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_REPO }}
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u "${{ secrets.DOCKER_REPO }}" --password-stdin

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_REPO }}/sonarqube-bobapp-back:latest
                
          docker push ${{ secrets.DOCKER_REPO }}/sonarqube-bobapp-front:latest
